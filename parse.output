   0  $accept : %entry% $end

   1  terminated_expr : cmd EOF

   2  expr : INT
   3       | VAR
   4       | STRING
   5       | LPAR expr RPAR
   6       | expr PLUS expr
   7       | expr MINUS expr
   8       | MINUS expr
   9       | expr BIN_MULT expr
  10       | expr BIN_CMP expr
  11       | expr AND expr
  12       | expr OR expr
  13       | NOT expr
  14       | VAR LPAR expr_seq RPAR
  15       | VAR LPAR RPAR

  16  expr_seq : expr COMMA expr_seq
  17           | expr

  18  cmd : VAR ASSIGN expr
  19      | SKIP
  20      | cmd SEQ cmd
  21      | IF expr THEN cmd ELSE cmd
  22      | WHILE expr DO cmd
  23      | BEGIN cmd END

  24  %entry% : '\001' terminated_expr

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . terminated_expr  (24)

	VAR  shift 3
	IF  shift 4
	WHILE  shift 5
	SKIP  shift 6
	BEGIN  shift 7
	.  error

	terminated_expr  goto 8
	cmd  goto 9


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	cmd : VAR . ASSIGN expr  (18)

	ASSIGN  shift 10
	.  error


state 4
	cmd : IF . expr THEN cmd ELSE cmd  (21)

	VAR  shift 11
	STRING  shift 12
	INT  shift 13
	MINUS  shift 14
	NOT  shift 15
	LPAR  shift 16
	.  error

	expr  goto 17


state 5
	cmd : WHILE . expr DO cmd  (22)

	VAR  shift 11
	STRING  shift 12
	INT  shift 13
	MINUS  shift 14
	NOT  shift 15
	LPAR  shift 16
	.  error

	expr  goto 18


state 6
	cmd : SKIP .  (19)

	.  reduce 19


state 7
	cmd : BEGIN . cmd END  (23)

	VAR  shift 3
	IF  shift 4
	WHILE  shift 5
	SKIP  shift 6
	BEGIN  shift 7
	.  error

	cmd  goto 19


state 8
	%entry% : '\001' terminated_expr .  (24)

	.  reduce 24


state 9
	terminated_expr : cmd . EOF  (1)
	cmd : cmd . SEQ cmd  (20)

	EOF  shift 20
	SEQ  shift 21
	.  error


state 10
	cmd : VAR ASSIGN . expr  (18)

	VAR  shift 11
	STRING  shift 12
	INT  shift 13
	MINUS  shift 14
	NOT  shift 15
	LPAR  shift 16
	.  error

	expr  goto 22


state 11
	expr : VAR .  (3)
	expr : VAR . LPAR expr_seq RPAR  (14)
	expr : VAR . LPAR RPAR  (15)

	LPAR  shift 23
	EOF  reduce 3
	BIN_MULT  reduce 3
	PLUS  reduce 3
	MINUS  reduce 3
	BIN_CMP  reduce 3
	AND  reduce 3
	OR  reduce 3
	RPAR  reduce 3
	THEN  reduce 3
	ELSE  reduce 3
	DO  reduce 3
	SEQ  reduce 3
	END  reduce 3
	COMMA  reduce 3


state 12
	expr : STRING .  (4)

	.  reduce 4


state 13
	expr : INT .  (2)

	.  reduce 2


state 14
	expr : MINUS . expr  (8)

	VAR  shift 11
	STRING  shift 12
	INT  shift 13
	MINUS  shift 14
	NOT  shift 15
	LPAR  shift 16
	.  error

	expr  goto 24


state 15
	expr : NOT . expr  (13)

	VAR  shift 11
	STRING  shift 12
	INT  shift 13
	MINUS  shift 14
	NOT  shift 15
	LPAR  shift 16
	.  error

	expr  goto 25


state 16
	expr : LPAR . expr RPAR  (5)

	VAR  shift 11
	STRING  shift 12
	INT  shift 13
	MINUS  shift 14
	NOT  shift 15
	LPAR  shift 16
	.  error

	expr  goto 26


state 17
	expr : expr . PLUS expr  (6)
	expr : expr . MINUS expr  (7)
	expr : expr . BIN_MULT expr  (9)
	expr : expr . BIN_CMP expr  (10)
	expr : expr . AND expr  (11)
	expr : expr . OR expr  (12)
	cmd : IF expr . THEN cmd ELSE cmd  (21)

	BIN_MULT  shift 27
	PLUS  shift 28
	MINUS  shift 29
	BIN_CMP  shift 30
	AND  shift 31
	OR  shift 32
	THEN  shift 33
	.  error


state 18
	expr : expr . PLUS expr  (6)
	expr : expr . MINUS expr  (7)
	expr : expr . BIN_MULT expr  (9)
	expr : expr . BIN_CMP expr  (10)
	expr : expr . AND expr  (11)
	expr : expr . OR expr  (12)
	cmd : WHILE expr . DO cmd  (22)

	BIN_MULT  shift 27
	PLUS  shift 28
	MINUS  shift 29
	BIN_CMP  shift 30
	AND  shift 31
	OR  shift 32
	DO  shift 34
	.  error


state 19
	cmd : cmd . SEQ cmd  (20)
	cmd : BEGIN cmd . END  (23)

	SEQ  shift 21
	END  shift 35
	.  error


state 20
	terminated_expr : cmd EOF .  (1)

	.  reduce 1


state 21
	cmd : cmd SEQ . cmd  (20)

	VAR  shift 3
	IF  shift 4
	WHILE  shift 5
	SKIP  shift 6
	BEGIN  shift 7
	.  error

	cmd  goto 36


state 22
	expr : expr . PLUS expr  (6)
	expr : expr . MINUS expr  (7)
	expr : expr . BIN_MULT expr  (9)
	expr : expr . BIN_CMP expr  (10)
	expr : expr . AND expr  (11)
	expr : expr . OR expr  (12)
	cmd : VAR ASSIGN expr .  (18)

	BIN_MULT  shift 27
	PLUS  shift 28
	MINUS  shift 29
	BIN_CMP  shift 30
	AND  shift 31
	OR  shift 32
	EOF  reduce 18
	ELSE  reduce 18
	SEQ  reduce 18
	END  reduce 18


state 23
	expr : VAR LPAR . expr_seq RPAR  (14)
	expr : VAR LPAR . RPAR  (15)

	VAR  shift 11
	STRING  shift 12
	INT  shift 13
	MINUS  shift 14
	NOT  shift 15
	LPAR  shift 16
	RPAR  shift 37
	.  error

	expr  goto 38
	expr_seq  goto 39


state 24
	expr : expr . PLUS expr  (6)
	expr : expr . MINUS expr  (7)
	expr : MINUS expr .  (8)
	expr : expr . BIN_MULT expr  (9)
	expr : expr . BIN_CMP expr  (10)
	expr : expr . AND expr  (11)
	expr : expr . OR expr  (12)

	.  reduce 8


state 25
	expr : expr . PLUS expr  (6)
	expr : expr . MINUS expr  (7)
	expr : expr . BIN_MULT expr  (9)
	expr : expr . BIN_CMP expr  (10)
	expr : expr . AND expr  (11)
	expr : expr . OR expr  (12)
	expr : NOT expr .  (13)

	BIN_MULT  shift 27
	PLUS  shift 28
	MINUS  shift 29
	BIN_CMP  shift 30
	EOF  reduce 13
	AND  reduce 13
	OR  reduce 13
	RPAR  reduce 13
	THEN  reduce 13
	ELSE  reduce 13
	DO  reduce 13
	SEQ  reduce 13
	END  reduce 13
	COMMA  reduce 13


state 26
	expr : LPAR expr . RPAR  (5)
	expr : expr . PLUS expr  (6)
	expr : expr . MINUS expr  (7)
	expr : expr . BIN_MULT expr  (9)
	expr : expr . BIN_CMP expr  (10)
	expr : expr . AND expr  (11)
	expr : expr . OR expr  (12)

	BIN_MULT  shift 27
	PLUS  shift 28
	MINUS  shift 29
	BIN_CMP  shift 30
	AND  shift 31
	OR  shift 32
	RPAR  shift 40
	.  error


state 27
	expr : expr BIN_MULT . expr  (9)

	VAR  shift 11
	STRING  shift 12
	INT  shift 13
	MINUS  shift 14
	NOT  shift 15
	LPAR  shift 16
	.  error

	expr  goto 41


state 28
	expr : expr PLUS . expr  (6)

	VAR  shift 11
	STRING  shift 12
	INT  shift 13
	MINUS  shift 14
	NOT  shift 15
	LPAR  shift 16
	.  error

	expr  goto 42


state 29
	expr : expr MINUS . expr  (7)

	VAR  shift 11
	STRING  shift 12
	INT  shift 13
	MINUS  shift 14
	NOT  shift 15
	LPAR  shift 16
	.  error

	expr  goto 43


state 30
	expr : expr BIN_CMP . expr  (10)

	VAR  shift 11
	STRING  shift 12
	INT  shift 13
	MINUS  shift 14
	NOT  shift 15
	LPAR  shift 16
	.  error

	expr  goto 44


state 31
	expr : expr AND . expr  (11)

	VAR  shift 11
	STRING  shift 12
	INT  shift 13
	MINUS  shift 14
	NOT  shift 15
	LPAR  shift 16
	.  error

	expr  goto 45


state 32
	expr : expr OR . expr  (12)

	VAR  shift 11
	STRING  shift 12
	INT  shift 13
	MINUS  shift 14
	NOT  shift 15
	LPAR  shift 16
	.  error

	expr  goto 46


state 33
	cmd : IF expr THEN . cmd ELSE cmd  (21)

	VAR  shift 3
	IF  shift 4
	WHILE  shift 5
	SKIP  shift 6
	BEGIN  shift 7
	.  error

	cmd  goto 47


state 34
	cmd : WHILE expr DO . cmd  (22)

	VAR  shift 3
	IF  shift 4
	WHILE  shift 5
	SKIP  shift 6
	BEGIN  shift 7
	.  error

	cmd  goto 48


state 35
	cmd : BEGIN cmd END .  (23)

	.  reduce 23


state 36
	cmd : cmd . SEQ cmd  (20)
	cmd : cmd SEQ cmd .  (20)

	.  reduce 20


state 37
	expr : VAR LPAR RPAR .  (15)

	.  reduce 15


state 38
	expr : expr . PLUS expr  (6)
	expr : expr . MINUS expr  (7)
	expr : expr . BIN_MULT expr  (9)
	expr : expr . BIN_CMP expr  (10)
	expr : expr . AND expr  (11)
	expr : expr . OR expr  (12)
	expr_seq : expr . COMMA expr_seq  (16)
	expr_seq : expr .  (17)

	BIN_MULT  shift 27
	PLUS  shift 28
	MINUS  shift 29
	BIN_CMP  shift 30
	AND  shift 31
	OR  shift 32
	COMMA  shift 49
	RPAR  reduce 17


state 39
	expr : VAR LPAR expr_seq . RPAR  (14)

	RPAR  shift 50
	.  error


state 40
	expr : LPAR expr RPAR .  (5)

	.  reduce 5


state 41
	expr : expr . PLUS expr  (6)
	expr : expr . MINUS expr  (7)
	expr : expr . BIN_MULT expr  (9)
	expr : expr BIN_MULT expr .  (9)
	expr : expr . BIN_CMP expr  (10)
	expr : expr . AND expr  (11)
	expr : expr . OR expr  (12)

	.  reduce 9


state 42
	expr : expr . PLUS expr  (6)
	expr : expr PLUS expr .  (6)
	expr : expr . MINUS expr  (7)
	expr : expr . BIN_MULT expr  (9)
	expr : expr . BIN_CMP expr  (10)
	expr : expr . AND expr  (11)
	expr : expr . OR expr  (12)

	BIN_MULT  shift 27
	EOF  reduce 6
	PLUS  reduce 6
	MINUS  reduce 6
	BIN_CMP  reduce 6
	AND  reduce 6
	OR  reduce 6
	RPAR  reduce 6
	THEN  reduce 6
	ELSE  reduce 6
	DO  reduce 6
	SEQ  reduce 6
	END  reduce 6
	COMMA  reduce 6


state 43
	expr : expr . PLUS expr  (6)
	expr : expr . MINUS expr  (7)
	expr : expr MINUS expr .  (7)
	expr : expr . BIN_MULT expr  (9)
	expr : expr . BIN_CMP expr  (10)
	expr : expr . AND expr  (11)
	expr : expr . OR expr  (12)

	BIN_MULT  shift 27
	EOF  reduce 7
	PLUS  reduce 7
	MINUS  reduce 7
	BIN_CMP  reduce 7
	AND  reduce 7
	OR  reduce 7
	RPAR  reduce 7
	THEN  reduce 7
	ELSE  reduce 7
	DO  reduce 7
	SEQ  reduce 7
	END  reduce 7
	COMMA  reduce 7


state 44
	expr : expr . PLUS expr  (6)
	expr : expr . MINUS expr  (7)
	expr : expr . BIN_MULT expr  (9)
	expr : expr . BIN_CMP expr  (10)
	expr : expr BIN_CMP expr .  (10)
	expr : expr . AND expr  (11)
	expr : expr . OR expr  (12)

	BIN_MULT  shift 27
	PLUS  shift 28
	MINUS  shift 29
	EOF  reduce 10
	BIN_CMP  reduce 10
	AND  reduce 10
	OR  reduce 10
	RPAR  reduce 10
	THEN  reduce 10
	ELSE  reduce 10
	DO  reduce 10
	SEQ  reduce 10
	END  reduce 10
	COMMA  reduce 10


state 45
	expr : expr . PLUS expr  (6)
	expr : expr . MINUS expr  (7)
	expr : expr . BIN_MULT expr  (9)
	expr : expr . BIN_CMP expr  (10)
	expr : expr . AND expr  (11)
	expr : expr AND expr .  (11)
	expr : expr . OR expr  (12)

	BIN_MULT  shift 27
	PLUS  shift 28
	MINUS  shift 29
	BIN_CMP  shift 30
	EOF  reduce 11
	AND  reduce 11
	OR  reduce 11
	RPAR  reduce 11
	THEN  reduce 11
	ELSE  reduce 11
	DO  reduce 11
	SEQ  reduce 11
	END  reduce 11
	COMMA  reduce 11


state 46
	expr : expr . PLUS expr  (6)
	expr : expr . MINUS expr  (7)
	expr : expr . BIN_MULT expr  (9)
	expr : expr . BIN_CMP expr  (10)
	expr : expr . AND expr  (11)
	expr : expr . OR expr  (12)
	expr : expr OR expr .  (12)

	BIN_MULT  shift 27
	PLUS  shift 28
	MINUS  shift 29
	BIN_CMP  shift 30
	AND  shift 31
	EOF  reduce 12
	OR  reduce 12
	RPAR  reduce 12
	THEN  reduce 12
	ELSE  reduce 12
	DO  reduce 12
	SEQ  reduce 12
	END  reduce 12
	COMMA  reduce 12


state 47
	cmd : cmd . SEQ cmd  (20)
	cmd : IF expr THEN cmd . ELSE cmd  (21)

	ELSE  shift 51
	SEQ  shift 21
	.  error


state 48
	cmd : cmd . SEQ cmd  (20)
	cmd : WHILE expr DO cmd .  (22)

	.  reduce 22


state 49
	expr_seq : expr COMMA . expr_seq  (16)

	VAR  shift 11
	STRING  shift 12
	INT  shift 13
	MINUS  shift 14
	NOT  shift 15
	LPAR  shift 16
	.  error

	expr  goto 38
	expr_seq  goto 52


state 50
	expr : VAR LPAR expr_seq RPAR .  (14)

	.  reduce 14


state 51
	cmd : IF expr THEN cmd ELSE . cmd  (21)

	VAR  shift 3
	IF  shift 4
	WHILE  shift 5
	SKIP  shift 6
	BEGIN  shift 7
	.  error

	cmd  goto 53


state 52
	expr_seq : expr COMMA expr_seq .  (16)

	.  reduce 16


state 53
	cmd : cmd . SEQ cmd  (20)
	cmd : IF expr THEN cmd ELSE cmd .  (21)

	.  reduce 21


28 terminals, 6 nonterminals
25 grammar rules, 54 states
